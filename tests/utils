#!/usr/bin/env bash

setup() {
  # navigate to where this script is located
  GITNU=$HERE/../target/debug/gitnu
  fresh_dir $HERE/log
}

teardown() {
  assert $PWD $HERE
  rm -rf /tmp/gitnu
}

fresh_dir() {
  rm -rf $1 && mkdir -p $1
}

# effectively gets basename without file extension
get_test_id() {
  local N=${1##*/} && printf ${N%%.*}
}

# grabs everything in the first line after '# '
get_test_title() {
  local title="$(head -n 1 $1)" && printf "${title### }"
}

assert() {
  if [[ "$1" != "$2" ]]; then
    echo "expected: $1"
    echo "received: $2"
    exit 1
  fi
}

__gitnu__() { # gitnu, with test-standard configs to fix test outputs
  $GITNU \
    -c user.name='bot' \
    -c user.email='bot@gitnu.co' \
    -c init.defaultBranch='main' \
    -c advice.statusHints='false' \
    "$@"
}

# for use in ./cases/*.sh
# $1 is number of files to mock up
# first file will be named 'file_0001'
init() {
  __gitnu__ init
  let local i=1
  while [ $i -le $1 ]; do
    printf -v padded "%04d" $i
    touch "file_$padded" && let i++
  done
}

PASS_BANNER='\033[0;30m\033[1;42m PASS \033[1;0m'
FAIL_BANNER='\033[0;30m\033[1;41m FAIL \033[1;0m'

grey() {
  echo "\033[0;37m$@\033[1;0m"
}

# $1 : test file
# $2 : test title
display_pass() {
  printf "$PASS_BANNER $1 $(grey $2)\n"
}

# $1 : test file
# $2 : test title
display_fail() {
  printf "$FAIL_BANNER $1 $(grey $2)\n"
}
